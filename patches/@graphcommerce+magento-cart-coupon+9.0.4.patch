diff --git a/node_modules/@graphcommerce/magento-cart-coupon/ApplyCouponForm/ApplyCouponForm.tsx b/node_modules/@graphcommerce/magento-cart-coupon/ApplyCouponForm/ApplyCouponForm.tsx
index 0a86e18..208862c 100644
--- a/node_modules/@graphcommerce/magento-cart-coupon/ApplyCouponForm/ApplyCouponForm.tsx
+++ b/node_modules/@graphcommerce/magento-cart-coupon/ApplyCouponForm/ApplyCouponForm.tsx
@@ -6,6 +6,7 @@ import { Trans } from '@lingui/react'
 import type { SxProps, Theme } from '@mui/material'
 import { Box, FormControl } from '@mui/material'
 import { ApplyCouponFormDocument } from './ApplyCouponForm.gql'
+import { useState } from 'react'
 
 export type ApplyCouponFormProps = { sx?: SxProps<Theme> }
 
@@ -15,9 +16,13 @@ const { classes } = extendableComponent(name, parts)
 
 export function ApplyCouponForm(props: ApplyCouponFormProps) {
   const { sx = [] } = props
-  const form = useFormGqlMutationCart(ApplyCouponFormDocument)
+  const [couponCode, setcouponCode] = useState("")
+  const form = useFormGqlMutationCart(ApplyCouponFormDocument, {
+    defaultValues: { couponCode },
+    onBeforeSubmit: (values) => ({ ...values, couponCode })
+  }, { errorPolicy: 'all' },)
   const { handleSubmit, control, formState, required, error } = form
-  const submitHandler = handleSubmit(() => {})
+  const submitHandler = handleSubmit(() => { })
 
   return (
     <Box
@@ -28,9 +33,10 @@ export function ApplyCouponForm(props: ApplyCouponFormProps) {
       sx={[
         (theme) => ({
           display: 'grid',
-          alignItems: 'center',
-          gridTemplateColumns: `1fr minmax(min-content, ${responsiveVal(70, 140)})`,
-          gridColumnGap: theme.spacings.sm,
+          alignItems: 'stretch',
+          // gridTemplateColumns: `1fr minmax(min-content, ${responsiveVal(70, 140)})`,
+          gridTemplateColumns: '9fr 3fr',
+          gridColumnGap: '10px',
         }),
         ...(Array.isArray(sx) ? sx : [sx]),
       ]}
@@ -46,15 +52,48 @@ export function ApplyCouponForm(props: ApplyCouponFormProps) {
         helperText={formState.errors.couponCode?.message}
         disabled={formState.isSubmitting}
         showValid
+        onChange={(e) => setcouponCode(e.target.value)}
+        placeholder='Enter Coupon Code'
+        className='gradient-border2'
+        sx={{
+          '& .MuiOutlinedInput-root': {
+            '& fieldset': {
+              borderColor: 'transparent',
+            },
+            '&:hover fieldset': {
+              borderColor: 'transparent',
+            },
+            '&.Mui-focused fieldset': {
+              borderColor: 'transparent',
+            },
+          },
+        }}
       />
-      <FormControl>
+      <FormControl sx={{ height: '100%' }}>
         <Button
           type='submit'
           className={classes.button}
           loading={formState.isSubmitting}
           color='secondary'
           variant='pill'
-          sx={{ whiteSpace: 'nowrap' }}
+          sx={{
+            whiteSpace: 'nowrap',
+            borderRadius: '3px',
+            height: '100%',
+            backgroundColor: (theme: any) => theme.palette.custom.tltSecondary,
+            color: (theme: any) => theme.palette.custom.tltContrastText,
+            fontSize: { xs: '15px', md: '18px', },
+            fontWeight: 700,
+            border: (theme: any) => `1px solid ${theme.palette.custom.tltSecondary}`,
+            lineHeight: '120%',
+            boxShadow: 'none !important',
+            textTransform: 'uppercase',
+            '&:hover': {
+              backgroundColor: 'transparent !important',
+              boxShadow: 'none !important',
+              color: (theme: any) => theme.palette.custom.tltSecondary,
+            }
+          }}
         >
           <Trans id='Apply' />
         </Button>
diff --git a/node_modules/@graphcommerce/magento-cart-coupon/CouponAccordion/CouponAccordion.tsx b/node_modules/@graphcommerce/magento-cart-coupon/CouponAccordion/CouponAccordion.tsx
index cefe300..844c485 100644
--- a/node_modules/@graphcommerce/magento-cart-coupon/CouponAccordion/CouponAccordion.tsx
+++ b/node_modules/@graphcommerce/magento-cart-coupon/CouponAccordion/CouponAccordion.tsx
@@ -7,13 +7,13 @@ import {
 } from '@graphcommerce/next-ui'
 import { Trans } from '@lingui/react'
 import type { SxProps, Theme } from '@mui/material'
-import { Accordion, AccordionDetails, AccordionSummary } from '@mui/material'
+import { Accordion, AccordionDetails, AccordionSummary, Box } from '@mui/material'
 import { useState } from 'react'
 import { ApplyCouponForm } from '../ApplyCouponForm/ApplyCouponForm'
 import { RemoveCouponForm } from '../RemoveCouponForm/RemoveCouponForm'
 import { GetCouponDocument } from './GetCoupon.gql'
 
-export type CouponAccordionProps = { sx?: SxProps<Theme> }
+export type CouponAccordionProps = { sx?: SxProps<Theme>, isCheckout?: boolean }
 
 type OwnerState = { open: boolean; disabled: boolean }
 const name = 'CouponAccordion'
@@ -21,7 +21,7 @@ const parts = ['accordion', 'button', 'couponFormWrap'] as const
 const { withState } = extendableComponent<OwnerState, typeof name, typeof parts>(name, parts)
 
 export function CouponAccordion(props: CouponAccordionProps) {
-  const { sx = [] } = props
+  const { sx = [], isCheckout = false } = props
   const { data } = useCartQuery(GetCouponDocument)
   const [open, setOpen] = useState<boolean>(false)
 
@@ -36,7 +36,31 @@ export function CouponAccordion(props: CouponAccordionProps) {
   const handleChange = () => setOpen(!coupon && !open)
 
   return (
-    <Accordion
+
+    <>
+      <Box sx={{ marginTop: { xs: isCheckout ? '10px' : '15px', sm: isCheckout ? '10px' : "20px", md: isCheckout ? '15px' : '30px', xl: isCheckout ? '20px' : '35px' }, }}>
+        <ApplyCouponForm
+
+          sx={[
+            (theme) => ({
+              '& .MuiInputBase-input': {
+                color: (theme: any) => theme.palette.custom.dark,
+                padding: '20px 24px',
+                fontSize: { xs: '16px', md: '18px' },
+                fontWeight: 400,
+                lineHeight: '120%',
+                borderRadius: '3px',
+                '&::placeholder': {
+                  color: (theme: any) => theme.palette.custom.dark,
+                  opacity: 1,
+                },
+              },
+            }),
+            ...(Array.isArray(sx) ? sx : [sx]),
+          ]}
+        />
+      </Box>
+      {/*  <Accordion
       className={classes.accordion}
       onChange={handleChange}
       expanded={!coupon && open}
@@ -79,6 +103,9 @@ export function CouponAccordion(props: CouponAccordionProps) {
       <AccordionDetails sx={(theme) => ({ px: theme.spacings.xs })}>
         <ApplyCouponForm />
       </AccordionDetails>
-    </Accordion>
+    </Accordion> */}
+    </>
+
+
   )
 }
